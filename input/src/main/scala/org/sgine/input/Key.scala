package org.sgine.input

import org.sgine.{Enumerated, EnumEntry}

/**
 * Key represents keys on the keyboard.
 *
 * @author Matt Hicks <mhicks@sgine.org>
 */
sealed class Key(val keyCode: Int) extends EnumEntry[Key] {
  protected[input] var _down = false

  def pressed = _down
}

object Key extends Enumerated[Key] {
  val AnyKey = new Key(-1)
  val Zero = new Key(7)
  val One = new Key(8)
  val Two = new Key(9)
  val Three = new Key(10)
  val Four = new Key(11)
  val Five = new Key(12)
  val Six = new Key(13)
  val Seven = new Key(14)
  val Eight = new Key(15)
  val Nine = new Key(16)
  val A = new Key(29)
  val AltLeft = new Key(57)
  val AltRight = new Key(58)
  val Apostrophe = new Key(75)
  val At = new Key(77)
  val B = new Key(30)
  val Back = new Key(4)
  val Backslash = new Key(73)
  val C = new Key(31)
  val Call = new Key(5)
  val Camera = new Key(27)
  val Clear = new Key(28)
  val Comma = new Key(55)
  val D = new Key(32)
  val Delete = new Key(67)
  val Backspace = new Key(67)
  val ForwardDelete = new Key(112)
  val Center = new Key(23)
  val Down = new Key(20)
  val Left = new Key(21)
  val Right = new Key(22)
  val Up = new Key(19)
  val E = new Key(33)
  val EndCall = new Key(6)
  val Enter = new Key(66)
  val Envelope = new Key(65)
  val Equals = new Key(70)
  val Explorer = new Key(64)
  val F = new Key(34)
  val Focus = new Key(80)
  val G = new Key(35)
  val Grave = new Key(68)
  val H = new Key(36)
  val HeadsetHook = new Key(79)
  val Home = new Key(3)
  val I = new Key(37)
  val J = new Key(38)
  val K = new Key(39)
  val L = new Key(40)
  val LeftBracket = new Key(71)
  val M = new Key(41)
  val MediaFastForward = new Key(90)
  val MediaNext = new Key(87)
  val MediaPlayPause = new Key(85)
  val MediaPrevious = new Key(88)
  val MediaRewind = new Key(89)
  val MediaStop = new Key(86)
  val Menu = new Key(82)
  val Minus = new Key(69)
  val Mute = new Key(91)
  val N = new Key(42)
  val Notification = new Key(83)
  val Num = new Key(78)
  val O = new Key(43)
  val P = new Key(44)
  val Period = new Key(56)
  val Plus = new Key(81)
  val Pound = new Key(18)
  val Power = new Key(26)
  val Q = new Key(45)
  val R = new Key(46)
  val RightBracket = new Key(72)
  val S = new Key(47)
  val Search = new Key(84)
  val Semicolon = new Key(74)
  val ShiftLeft = new Key(59)
  val ShiftRight = new Key(60)
  val Slash = new Key(76)
  val SoftLeft = new Key(1)
  val SoftRight = new Key(2)
  val Space = new Key(62)
  val Star = new Key(17)
  val Sym = new Key(63)
  val T = new Key(48)
  val Tab = new Key(61)
  val U = new Key(49)
  val Unknown = new Key(0)
  val V = new Key(50)
  val VolumeDown = new Key(25)
  val VolumeUp = new Key(24)
  val W = new Key(51)
  val X = new Key(52)
  val Y = new Key(53)
  val Z = new Key(54)
  val MetaAltLeftOn = new Key(16)
  val MetaAltOn = new Key(2)
  val MetaAltRightOn = new Key(32)
  val MetaShiftLeftOn = new Key(64)
  val MetaShiftOn = new Key(1)
  val MetaShiftRightOn = new Key(128)
  val MetaSymOn = new Key(4)
  val ControlLeft = new Key(129)
  val ControlRight = new Key(130)
  val Escape = new Key(131)
  val End = new Key(132)
  val Insert = new Key(133)
  val PageUp = new Key(92)
  val PageDown = new Key(93)
  val PictSymbols = new Key(94)
  val SwitchCharset = new Key(95)
  val ButtonCircle = new Key(255)
  val ButtonA = new Key(96)
  val ButtonB = new Key(97)
  val ButtonC = new Key(98)
  val ButtonX = new Key(99)
  val ButtonY = new Key(100)
  val ButtonZ = new Key(101)
  val ButtonL1 = new Key(102)
  val ButtonR1 = new Key(103)
  val ButtonL2 = new Key(104)
  val ButtonR2 = new Key(105)
  val ButtonThumbLeft = new Key(106)
  val ButtonThumbRight = new Key(107)
  val ButtonStart = new Key(108)
  val ButtonSelect = new Key(109)
  val ButtonMode = new Key(110)
  val Colon = new Key(243)
  val F1 = new Key(244)
  val F2 = new Key(245)
  val F3 = new Key(246)
  val F4 = new Key(247)
  val F5 = new Key(248)
  val F6 = new Key(249)
  val F7 = new Key(250)
  val F8 = new Key(251)
  val F9 = new Key(252)
  val F10 = new Key(253)
  val F11 = new Key(254)
  val F12 = new Key(255)

  /**
   * Looks up the key by the keyCode provided.
   */
  def byKeyCode(keyCode: Int) = values.find(k => k.keyCode == keyCode)

  /**
   * Returns all the keys that are currently pressed.
   */
  def pressed() = values.collect {
    case key if (key.pressed) => key
  }
}